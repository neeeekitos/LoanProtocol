{
  "contractName": "DynamicCollateralLending",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "bool",
          "name": "fraudStatus",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "activeLoan",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "activeSupply",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_requestedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_repaymentsCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_interest",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "_loanDescription",
          "type": "bytes32"
        }
      ],
      "name": "applyForLoan",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_repaymentsCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_interest\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_loanDescription\",\"type\":\"bytes32\"}],\"name\":\"applyForLoan\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"fraudStatus\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"activeLoan\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"activeSupply\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/nikitaterekhov/Projects/LiquidityProtocol/contracts/DynamicCollateralLending.sol\":\"DynamicCollateralLending\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/nikitaterekhov/Projects/LiquidityProtocol/contracts/DynamicCollateralLending.sol\":{\"keccak256\":\"0x33bc66b1e02b675e13b00dda206a4e680b6f4219255809b97e2c97572ccc3cbc\",\"urls\":[\"bzz-raw://53c48e56b92c2066998f0fa62769c4e73de7cad831bb9a4c3a77f85c12d260f4\",\"dweb:/ipfs/QmcFSAFyrZg2CbMacKZP6Saacm1Qnpw5WTPUqNMnAufGVA\"]},\"/Users/nikitaterekhov/Projects/LiquidityProtocol/contracts/Loan.sol\":{\"keccak256\":\"0xf1fbde95b2e5f6ec1bff67715a0348f1e0248e5d22206887ab6164c27fc4951b\",\"urls\":[\"bzz-raw://78a766b62c7c2198013616fc5ded99598ff8af1cbab266d14ed8063cf6210235\",\"dweb:/ipfs/QmPsJ2RZjzESz9sLyFxSBxoLQFfxmv4Cc4QJwcTNvfbsUL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1477864def7febd9826918e50482a1ee7068b337b03804a7e0e98c674ac57c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bdd8ea2ace1bf716007318f8aca21d32384f0b8b295adac55147270767441fa\",\"dweb:/ipfs/QmSv235N45Ub3wFXdTLNiS3k4b7FAudtEL8s6g1PwcsCcS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611693806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638852648c1461003b578063a87430ba1461006b575b600080fd5b61005560048036038101906100509190610377565b61009d565b6040516100629190610416565b60405180910390f35b6100856004803603810190610080919061034e565b61028b565b60405161009493929190610431565b60405180910390f35b60008015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146100fd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000858585856040516101d390610302565b6101e09493929190610468565b604051809103906000f0801580156101fc573d6000803e3d6000fd5b509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080915050949350505050565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b6111198061054583390190565b60008135905061031e816104ff565b92915050565b60008135905061033381610516565b92915050565b6000813590506103488161052d565b92915050565b60006020828403121561036057600080fd5b600061036e8482850161030f565b91505092915050565b6000806000806080858703121561038d57600080fd5b600061039b87828801610339565b94505060206103ac87828801610339565b93505060406103bd87828801610339565b92505060606103ce87828801610324565b91505092959194509250565b6103e3816104ad565b82525050565b6103f2816104bf565b82525050565b610401816104cb565b82525050565b610410816104f5565b82525050565b600060208201905061042b60008301846103da565b92915050565b600060608201905061044660008301866103e9565b61045360208301856103da565b61046060408301846103da565b949350505050565b600060808201905061047d6000830187610407565b61048a6020830186610407565b6104976040830185610407565b6104a460608301846103f8565b95945050505050565b60006104b8826104d5565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610508816104ad565b811461051357600080fd5b50565b61051f816104cb565b811461052a57600080fd5b50565b610536816104f5565b811461054157600080fd5b5056fe60806040526001600b60006101000a81548160ff0219169083151502179055506000600f553480156200003157600080fd5b5060405162001119380380620011198339818101604052810190620000579190620000ee565b8360018190555082600281905550816003819055508060048190555062000091600354600154620000a860201b62000c6f1790919060201c565b60058190555042600681905550505050506200022e565b60008183620000b891906200015a565b905092915050565b600081519050620000d181620001fa565b92915050565b600081519050620000e88162000214565b92915050565b600080600080608085870312156200010557600080fd5b60006200011587828801620000d7565b94505060206200012887828801620000d7565b93505060406200013b87828801620000d7565b92505060606200014e87828801620000c0565b91505092959194509250565b60006200016782620001c1565b91506200017483620001c1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620001ac57620001ab620001cb565b5b828201905092915050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6200020581620001b7565b81146200021157600080fd5b50565b6200021f81620001c1565b81146200022b57600080fd5b50565b610edb806200023e6000396000f3fe6080604052600436106100555760003560e01c806312065fe01461005a57806328fd10d7146100855780633ccfd60b146100c2578063402d8883146100d957806397dffc61146100e3578063efd475ab146100ed575b600080fd5b34801561006657600080fd5b5061006f610104565b60405161007c9190610d12565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a79190610cb0565b61010c565b6040516100b99190610cf7565b60405180910390f35b3480156100ce57600080fd5b506100d761012c565b005b6100e16103b3565b005b6100eb610642565b005b3480156100f957600080fd5b50610102610916565b005b600047905090565b600c6020528060005260406000206000915054906101000a900460ff1681565b60011515600b60009054906101000a900460ff1615151461014c57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a457600080fd5b6001544710156101b357600080fd5b6005808111156101ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e60009054906101000a900460ff166005811115610234577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561023f57600080fd5b6001600e60006101000a81548160ff0219169083600581111561028b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555042600e60009054906101000a900460ff1660058111156102d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a342473373ffffffffffffffffffffffffffffffffffffffff167f20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e660405160405180910390a460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103b0573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040b57600080fd5b60016005811115610445577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e60009054906101000a900460ff16600581111561048d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461049757600080fd5b6000600854116104a657600080fd5b6009543410156104b557600080fd5b600554600a54106104ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b4260078190555060006009543411156105e15761051760095434610c8590919063ffffffff16565b905061052c8134610c8590919063ffffffff16565b60095414610563577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b348110610599577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105df573d6000803e3d6000fd5b505b600554600a54141561063f576002600e60006101000a81548160ff02191690836005811115610639577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b6000600581111561067c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e60009054906101000a900460ff1660058111156106c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106ce57600080fd5b60006001544710610814576106ee60015447610c8590919063ffffffff16565b90506107038147610c8590919063ffffffff16565b6001541461073a577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b34811115610771577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60008111156107c2573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156107c0573d6000803e3d6000fd5b505b6001600e60006101000a81548160ff0219169083600581111561080e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108d06108828234610c8590919063ffffffff16565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c6f90919063ffffffff16565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60011515600b60009054906101000a900460ff1615151461093657600080fd5b60011515600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461099357600080fd5b600260058111156109cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e60009054906101000a900460ff166005811115610a15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a1f57600080fd5b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610a6b57600080fd5b6000600f54600554610a7d9190610d83565b905080471015610ab6577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610afc573d6000803e3d6000fd5b5042813373ffffffffffffffffffffffffffffffffffffffff167f052f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c40360405160405180910390a46000471415610c6c576000600b60006101000a81548160ff02191690831515021790555042600b60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600e60006101000a81548160ff02191690836005811115610bf1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555042600e60009054906101000a900460ff166005811115610c3f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b60008183610c7d9190610d2d565b905092915050565b60008183610c939190610db4565b905092915050565b600081359050610caa81610e8e565b92915050565b600060208284031215610cc257600080fd5b6000610cd084828501610c9b565b91505092915050565b610ce281610dfa565b82525050565b610cf181610e26565b82525050565b6000602082019050610d0c6000830184610cd9565b92915050565b6000602082019050610d276000830184610ce8565b92915050565b6000610d3882610e26565b9150610d4383610e26565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d7857610d77610e30565b5b828201905092915050565b6000610d8e82610e26565b9150610d9983610e26565b925082610da957610da8610e5f565b5b828204905092915050565b6000610dbf82610e26565b9150610dca83610e26565b925082821015610ddd57610ddc610e30565b5b828203905092915050565b6000610df382610e06565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610e9781610de8565b8114610ea257600080fd5b5056fea264697066735822122019b2f903d33a513b1964656173896c44432b3ca983f64db8dfdd324c3560a85264736f6c63430008000033a2646970667358221220c2f3fb3611fa802cf89b70078f97aea920ee1e27da3c06ee19085f454f3d645f64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80638852648c1461003b578063a87430ba1461006b575b600080fd5b61005560048036038101906100509190610377565b61009d565b6040516100629190610416565b60405180910390f35b6100856004803603810190610080919061034e565b61028b565b60405161009493929190610431565b60405180910390f35b60008015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff161515146100fd57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146101c1577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b6000858585856040516101d390610302565b6101e09493929190610468565b604051809103906000f0801580156101fc573d6000803e3d6000fd5b509050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080915050949350505050565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b6111198061054583390190565b60008135905061031e816104ff565b92915050565b60008135905061033381610516565b92915050565b6000813590506103488161052d565b92915050565b60006020828403121561036057600080fd5b600061036e8482850161030f565b91505092915050565b6000806000806080858703121561038d57600080fd5b600061039b87828801610339565b94505060206103ac87828801610339565b93505060406103bd87828801610339565b92505060606103ce87828801610324565b91505092959194509250565b6103e3816104ad565b82525050565b6103f2816104bf565b82525050565b610401816104cb565b82525050565b610410816104f5565b82525050565b600060208201905061042b60008301846103da565b92915050565b600060608201905061044660008301866103e9565b61045360208301856103da565b61046060408301846103da565b949350505050565b600060808201905061047d6000830187610407565b61048a6020830186610407565b6104976040830185610407565b6104a460608301846103f8565b95945050505050565b60006104b8826104d5565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610508816104ad565b811461051357600080fd5b50565b61051f816104cb565b811461052a57600080fd5b50565b610536816104f5565b811461054157600080fd5b5056fe60806040526001600b60006101000a81548160ff0219169083151502179055506000600f553480156200003157600080fd5b5060405162001119380380620011198339818101604052810190620000579190620000ee565b8360018190555082600281905550816003819055508060048190555062000091600354600154620000a860201b62000c6f1790919060201c565b60058190555042600681905550505050506200022e565b60008183620000b891906200015a565b905092915050565b600081519050620000d181620001fa565b92915050565b600081519050620000e88162000214565b92915050565b600080600080608085870312156200010557600080fd5b60006200011587828801620000d7565b94505060206200012887828801620000d7565b93505060406200013b87828801620000d7565b92505060606200014e87828801620000c0565b91505092959194509250565b60006200016782620001c1565b91506200017483620001c1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620001ac57620001ab620001cb565b5b828201905092915050565b6000819050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6200020581620001b7565b81146200021157600080fd5b50565b6200021f81620001c1565b81146200022b57600080fd5b50565b610edb806200023e6000396000f3fe6080604052600436106100555760003560e01c806312065fe01461005a57806328fd10d7146100855780633ccfd60b146100c2578063402d8883146100d957806397dffc61146100e3578063efd475ab146100ed575b600080fd5b34801561006657600080fd5b5061006f610104565b60405161007c9190610d12565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a79190610cb0565b61010c565b6040516100b99190610cf7565b60405180910390f35b3480156100ce57600080fd5b506100d761012c565b005b6100e16103b3565b005b6100eb610642565b005b3480156100f957600080fd5b50610102610916565b005b600047905090565b600c6020528060005260406000206000915054906101000a900460ff1681565b60011515600b60009054906101000a900460ff1615151461014c57600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a457600080fd5b6001544710156101b357600080fd5b6005808111156101ec577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e60009054906101000a900460ff166005811115610234577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b141561023f57600080fd5b6001600e60006101000a81548160ff0219169083600581111561028b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555042600e60009054906101000a900460ff1660058111156102d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a342473373ffffffffffffffffffffffffffffffffffffffff167f20734f14d107b526674905e470e35d0a474f9fb996a7bdb034c839c8894524e660405160405180910390a460008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156103b0573d6000803e3d6000fd5b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040b57600080fd5b60016005811115610445577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e60009054906101000a900460ff16600581111561048d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461049757600080fd5b6000600854116104a657600080fd5b6009543410156104b557600080fd5b600554600a54106104ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b4260078190555060006009543411156105e15761051760095434610c8590919063ffffffff16565b905061052c8134610c8590919063ffffffff16565b60095414610563577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b348110610599577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105df573d6000803e3d6000fd5b505b600554600a54141561063f576002600e60006101000a81548160ff02191690836005811115610639577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b50565b6000600581111561067c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e60009054906101000a900460ff1660058111156106c4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146106ce57600080fd5b60006001544710610814576106ee60015447610c8590919063ffffffff16565b90506107038147610c8590919063ffffffff16565b6001541461073a577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b34811115610771577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60008111156107c2573373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156107c0573d6000803e3d6000fd5b505b6001600e60006101000a81548160ff0219169083600581111561080e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108d06108828234610c8590919063ffffffff16565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c6f90919063ffffffff16565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050565b60011515600b60009054906101000a900460ff1615151461093657600080fd5b60011515600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151461099357600080fd5b600260058111156109cd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600e60009054906101000a900460ff166005811115610a15577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610a1f57600080fd5b6000600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610a6b57600080fd5b6000600f54600554610a7d9190610d83565b905080471015610ab6577f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610afc573d6000803e3d6000fd5b5042813373ffffffffffffffffffffffffffffffffffffffff167f052f6685df2f773f854b17db1d82e2352e222010daaf8175761f02ef8782c40360405160405180910390a46000471415610c6c576000600b60006101000a81548160ff02191690831515021790555042600b60009054906101000a900460ff1615157f160914ea27c60aa29a5f3a69d74e6069869de36e38939de1e0a66b921d8623d260405160405180910390a36003600e60006101000a81548160ff02191690836005811115610bf1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555042600e60009054906101000a900460ff166005811115610c3f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7faaae373901e745122c2e0925ad006227969c6cd190b7d5ea2fb7fdbd1d955b3560405160405180910390a35b50565b60008183610c7d9190610d2d565b905092915050565b60008183610c939190610db4565b905092915050565b600081359050610caa81610e8e565b92915050565b600060208284031215610cc257600080fd5b6000610cd084828501610c9b565b91505092915050565b610ce281610dfa565b82525050565b610cf181610e26565b82525050565b6000602082019050610d0c6000830184610cd9565b92915050565b6000602082019050610d276000830184610ce8565b92915050565b6000610d3882610e26565b9150610d4383610e26565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d7857610d77610e30565b5b828201905092915050565b6000610d8e82610e26565b9150610d9983610e26565b925082610da957610da8610e5f565b5b828204905092915050565b6000610dbf82610e26565b9150610dca83610e26565b925082821015610ddd57610ddc610e30565b5b828203905092915050565b6000610df382610e06565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b610e9781610de8565b8114610ea257600080fd5b5056fea264697066735822122019b2f903d33a513b1964656173896c44432b3ca983f64db8dfdd324c3560a85264736f6c63430008000033a2646970667358221220c2f3fb3611fa802cf89b70078f97aea920ee1e27da3c06ee19085f454f3d645f64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4001:4",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:4"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:4",
                "type": ""
              }
            ],
            "src": "7:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:4"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:4",
                "type": ""
              }
            ],
            "src": "152:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "349:87:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "359:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "381:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "368:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "359:5:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "424:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "397:26:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "397:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "397:33:4"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "327:6:4",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "335:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "343:5:4",
                "type": ""
              }
            ],
            "src": "297:139:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:196:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "554:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "563:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "566:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "556:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "556:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "556:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "529:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "538:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "525:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "525:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "521:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "521:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "518:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "580:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "595:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "609:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "599:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "624:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "659:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "670:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "655:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "655:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "679:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "634:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "634:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "624:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "478:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "489:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "501:6:4",
                "type": ""
              }
            ],
            "src": "442:262:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "827:581:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "874:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "883:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "886:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "876:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "876:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "876:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "848:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "857:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "844:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "844:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "869:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "840:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "840:33:4"
                  },
                  "nodeType": "YulIf",
                  "src": "837:2:4"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "900:117:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "915:15:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "929:1:4",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "919:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "944:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "979:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "990:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "975:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "975:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "999:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "954:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "944:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1027:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1042:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1056:2:4",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1046:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1072:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1107:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1118:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1103:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1103:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1127:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1082:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1082:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1072:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1155:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1170:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1184:2:4",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1174:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1200:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1235:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1246:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1231:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1231:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1255:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1210:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1200:6:4"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1283:118:4",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1298:16:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:2:4",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1302:6:4",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1328:63:4",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1363:9:4"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1374:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1359:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1359:22:4"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1383:7:4"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1338:20:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1338:53:4"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1328:6:4"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "773:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "784:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "796:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "804:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "812:6:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "820:6:4",
                "type": ""
              }
            ],
            "src": "710:698:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1479:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1496:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1519:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1501:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1501:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1489:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1489:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1489:37:4"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1467:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1474:3:4",
                "type": ""
              }
            ],
            "src": "1414:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1597:50:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1614:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1634:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1619:14:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1619:21:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1607:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1607:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1607:34:4"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1585:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1592:3:4",
                "type": ""
              }
            ],
            "src": "1538:109:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1718:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1735:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1758:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1740:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1740:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1728:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1728:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1728:37:4"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1706:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1713:3:4",
                "type": ""
              }
            ],
            "src": "1653:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1842:53:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1859:3:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1882:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1864:17:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1864:24:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1852:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1852:37:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1852:37:4"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1830:5:4",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1837:3:4",
                "type": ""
              }
            ],
            "src": "1777:118:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1999:124:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2009:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2021:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2032:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2017:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2017:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2009:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2089:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2102:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2113:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2098:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2098:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2045:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2045:71:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1971:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1983:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1994:4:4",
                "type": ""
              }
            ],
            "src": "1901:222:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2277:282:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2287:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2299:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2310:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2295:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2295:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2287:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2361:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2374:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2385:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2370:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2370:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2323:37:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2323:65:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2323:65:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2442:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2455:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2466:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2451:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2451:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2398:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2398:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2398:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2524:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2537:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2548:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2533:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2533:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2480:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2480:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2480:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_address_t_address__to_t_bool_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2233:9:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2245:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2253:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2261:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2272:4:4",
                "type": ""
              }
            ],
            "src": "2129:430:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2747:371:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2757:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2769:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2780:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2765:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2765:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2757:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2838:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2851:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2862:1:4",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2847:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2847:17:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2794:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:71:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2794:71:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2919:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2932:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2943:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2928:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2928:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2875:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2875:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3001:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3014:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3025:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3010:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3010:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2957:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2957:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2957:72:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "3083:6:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3096:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3107:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3092:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3092:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3039:43:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3039:72:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3039:72:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2695:9:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2707:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2715:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2723:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2731:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2742:4:4",
                "type": ""
              }
            ],
            "src": "2565:553:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3169:51:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3179:35:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3208:5:4"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3190:17:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3190:24:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3179:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3151:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3161:7:4",
                "type": ""
              }
            ],
            "src": "3124:96:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3268:48:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3278:32:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3303:5:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3296:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3296:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3289:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3289:21:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3278:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3250:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3260:7:4",
                "type": ""
              }
            ],
            "src": "3226:90:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3367:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3377:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3388:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3377:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3349:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3359:7:4",
                "type": ""
              }
            ],
            "src": "3322:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3450:81:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3460:65:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3475:5:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3482:42:4",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3471:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3471:54:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3460:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3432:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3442:7:4",
                "type": ""
              }
            ],
            "src": "3405:126:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3582:32:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3592:16:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3603:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3592:7:4"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3564:5:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3574:7:4",
                "type": ""
              }
            ],
            "src": "3537:77:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3663:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3720:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3729:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3732:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3722:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3722:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3722:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3686:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3711:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "3693:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3693:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3683:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3683:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3676:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3676:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3673:2:4"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3656:5:4",
                "type": ""
              }
            ],
            "src": "3620:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3791:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3848:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3857:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3860:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3850:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3850:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3850:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3814:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3839:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "3821:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3821:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3811:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3811:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3804:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3804:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3801:2:4"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3784:5:4",
                "type": ""
              }
            ],
            "src": "3748:122:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3919:79:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3976:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3985:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3988:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3978:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3978:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3978:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3942:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3967:5:4"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3949:17:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3949:24:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3939:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3939:35:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3932:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3932:43:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3929:2:4"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3912:5:4",
                "type": ""
              }
            ],
            "src": "3876:122:4"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool_t_address_t_address__to_t_bool_t_address_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bytes32__to_t_uint256_t_uint256_t_uint256_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "102:797:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "102:797:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;364:532;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;320:37;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;364:532;489:7;585:5;552:38;;:5;:17;558:10;552:17;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:38;;;544:47;;;;;;704:1;664:42;;:5;:17;670:10;664:17;;;;;;;;;;;;;;;:28;;;;;;;;;;;;:42;;;657:50;;;;;;;;;;;;718:9;739:16;757;775:9;786:16;730:73;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;718:85;;853:4;814:5;:17;820:10;814:17;;;;;;;;;;;;;;;:28;;;:44;;;;;;;;;;;;;;;;;;884:4;869:20;;;364:532;;;;;;:::o;320:37::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:4:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:139::-;;381:6;368:20;359:29;;397:33;424:5;397:33;:::i;:::-;349:87;;;;:::o;442:262::-;;550:2;538:9;529:7;525:23;521:32;518:2;;;566:1;563;556:12;518:2;609:1;634:53;679:7;670:6;659:9;655:22;634:53;:::i;:::-;624:63;;580:117;508:196;;;;:::o;710:698::-;;;;;869:3;857:9;848:7;844:23;840:33;837:2;;;886:1;883;876:12;837:2;929:1;954:53;999:7;990:6;979:9;975:22;954:53;:::i;:::-;944:63;;900:117;1056:2;1082:53;1127:7;1118:6;1107:9;1103:22;1082:53;:::i;:::-;1072:63;;1027:118;1184:2;1210:53;1255:7;1246:6;1235:9;1231:22;1210:53;:::i;:::-;1200:63;;1155:118;1312:2;1338:53;1383:7;1374:6;1363:9;1359:22;1338:53;:::i;:::-;1328:63;;1283:118;827:581;;;;;;;:::o;1414:118::-;1501:24;1519:5;1501:24;:::i;:::-;1496:3;1489:37;1479:53;;:::o;1538:109::-;1619:21;1634:5;1619:21;:::i;:::-;1614:3;1607:34;1597:50;;:::o;1653:118::-;1740:24;1758:5;1740:24;:::i;:::-;1735:3;1728:37;1718:53;;:::o;1777:118::-;1864:24;1882:5;1864:24;:::i;:::-;1859:3;1852:37;1842:53;;:::o;1901:222::-;;2032:2;2021:9;2017:18;2009:26;;2045:71;2113:1;2102:9;2098:17;2089:6;2045:71;:::i;:::-;1999:124;;;;:::o;2129:430::-;;2310:2;2299:9;2295:18;2287:26;;2323:65;2385:1;2374:9;2370:17;2361:6;2323:65;:::i;:::-;2398:72;2466:2;2455:9;2451:18;2442:6;2398:72;:::i;:::-;2480;2548:2;2537:9;2533:18;2524:6;2480:72;:::i;:::-;2277:282;;;;;;:::o;2565:553::-;;2780:3;2769:9;2765:19;2757:27;;2794:71;2862:1;2851:9;2847:17;2838:6;2794:71;:::i;:::-;2875:72;2943:2;2932:9;2928:18;2919:6;2875:72;:::i;:::-;2957;3025:2;3014:9;3010:18;3001:6;2957:72;:::i;:::-;3039;3107:2;3096:9;3092:18;3083:6;3039:72;:::i;:::-;2747:371;;;;;;;:::o;3124:96::-;;3190:24;3208:5;3190:24;:::i;:::-;3179:35;;3169:51;;;:::o;3226:90::-;;3303:5;3296:13;3289:21;3278:32;;3268:48;;;:::o;3322:77::-;;3388:5;3377:16;;3367:32;;;:::o;3405:126::-;;3482:42;3475:5;3471:54;3460:65;;3450:81;;;:::o;3537:77::-;;3603:5;3592:16;;3582:32;;;:::o;3620:122::-;3693:24;3711:5;3693:24;:::i;:::-;3686:5;3683:35;3673:2;;3732:1;3729;3722:12;3673:2;3663:79;:::o;3748:122::-;3821:24;3839:5;3821:24;:::i;:::-;3814:5;3811:35;3801:2;;3860:1;3857;3850:12;3801:2;3791:79;:::o;3876:122::-;3949:24;3967:5;3949:24;:::i;:::-;3942:5;3939:35;3929:2;;3988:1;3985;3978:12;3929:2;3919:79;:::o",
  "source": "pragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\nimport \"./Loan.sol\";\n\ncontract DynamicCollateralLending {\n\n    using Math for uint;\n\n    struct User {\n        bool fraudStatus;\n        address activeLoan;\n        address activeSupply;\n    }\n\n    // Store all users with their address\n    mapping(address => User) public users;\n\n    function applyForLoan(uint _requestedAmount, uint _repaymentsCount, uint _interest, bytes32 _loanDescription) public returns(address) {\n\n        // The user not fraudulent\n        require(users[msg.sender].fraudStatus == false);\n\n        // The user must not have any loan in progress\n        assert(users[msg.sender].activeLoan == address(0));\n\n        Loan loan = new Loan(_requestedAmount, _repaymentsCount, _interest, _loanDescription);\n\n        users[msg.sender].activeLoan = address(loan);\n\n        return address(loan);\n    }\n\n}\n",
  "sourcePath": "/Users/nikitaterekhov/Projects/LiquidityProtocol/contracts/DynamicCollateralLending.sol",
  "ast": {
    "absolutePath": "/Users/nikitaterekhov/Projects/LiquidityProtocol/contracts/DynamicCollateralLending.sol",
    "exportedSymbols": {
      "DynamicCollateralLending": [
        84
      ],
      "Loan": [
        719
      ],
      "Math": [
        792
      ],
      "SafeMath": [
        1104
      ]
    },
    "id": 85,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 793,
        "src": "25:53:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nikitaterekhov/Projects/LiquidityProtocol/contracts/Loan.sol",
        "file": "./Loan.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 720,
        "src": "80:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          719
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 84,
        "linearizedBaseContracts": [
          84
        ],
        "name": "DynamicCollateralLending",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6,
            "libraryName": {
              "id": 4,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 792,
              "src": "149:4:0"
            },
            "nodeType": "UsingForDirective",
            "src": "143:20:0",
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "158:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "DynamicCollateralLending.User",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "fraudStatus",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "191:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "191:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "activeLoan",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "217:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "217:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "activeSupply",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "245:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 84,
            "src": "169:103:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 18,
            "mutability": "mutable",
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 84,
            "src": "320:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
              "typeString": "mapping(address => struct DynamicCollateralLending.User)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "320:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
                "typeString": "mapping(address => struct DynamicCollateralLending.User)"
              },
              "valueType": {
                "id": 16,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15,
                  "name": "User",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13,
                  "src": "339:4:0"
                },
                "referencedDeclaration": 13,
                "src": "339:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$13_storage_ptr",
                  "typeString": "struct DynamicCollateralLending.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "498:398:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 32,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "552:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
                                "typeString": "mapping(address => struct DynamicCollateralLending.User storage ref)"
                              }
                            },
                            "id": 35,
                            "indexExpression": {
                              "expression": {
                                "id": 33,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "558:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 34,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "558:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "552:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$13_storage",
                              "typeString": "struct DynamicCollateralLending.User storage ref"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "552:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "585:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "552:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "544:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "544:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 42,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "664:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
                                "typeString": "mapping(address => struct DynamicCollateralLending.User storage ref)"
                              }
                            },
                            "id": 45,
                            "indexExpression": {
                              "expression": {
                                "id": 43,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "670:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "670:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "664:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$13_storage",
                              "typeString": "struct DynamicCollateralLending.User storage ref"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activeLoan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "664:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "704:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "696:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "696:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "696:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "664:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "657:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "657:50:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "loan",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "718:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Loan_$719",
                        "typeString": "contract Loan"
                      },
                      "typeName": {
                        "id": 55,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54,
                          "name": "Loan",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 719,
                          "src": "718:4:0"
                        },
                        "referencedDeclaration": 719,
                        "src": "718:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Loan_$719",
                          "typeString": "contract Loan"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60,
                        "name": "_requestedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "739:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61,
                        "name": "_repaymentsCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "757:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62,
                        "name": "_interest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "775:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63,
                        "name": "_loanDescription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "786:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "730:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_contract$_Loan_$719_$",
                        "typeString": "function (uint256,uint256,uint256,bytes32) returns (contract Loan)"
                      },
                      "typeName": {
                        "id": 58,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 57,
                          "name": "Loan",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 719,
                          "src": "734:4:0"
                        },
                        "referencedDeclaration": 719,
                        "src": "734:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Loan_$719",
                          "typeString": "contract Loan"
                        }
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Loan_$719",
                      "typeString": "contract Loan"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "718:85:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 66,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "814:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
                            "typeString": "mapping(address => struct DynamicCollateralLending.User storage ref)"
                          }
                        },
                        "id": 69,
                        "indexExpression": {
                          "expression": {
                            "id": 67,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "820:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "820:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "814:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$13_storage",
                          "typeString": "struct DynamicCollateralLending.User storage ref"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activeLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "814:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73,
                          "name": "loan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "853:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Loan_$719",
                            "typeString": "contract Loan"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Loan_$719",
                            "typeString": "contract Loan"
                          }
                        ],
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "845:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "845:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "845:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "814:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "814:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "884:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Loan_$719",
                          "typeString": "contract Loan"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Loan_$719",
                          "typeString": "contract Loan"
                        }
                      ],
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "876:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "876:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 30,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "869:20:0"
                }
              ]
            },
            "functionSelector": "8852648c",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "applyForLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_requestedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "386:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_repaymentsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "409:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_interest",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "432:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_loanDescription",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "448:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "385:88:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "489:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:9:0"
            },
            "scope": 84,
            "src": "364:532:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 85,
        "src": "102:797:0"
      }
    ],
    "src": "0:900:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/nikitaterekhov/Projects/LiquidityProtocol/contracts/DynamicCollateralLending.sol",
    "exportedSymbols": {
      "DynamicCollateralLending": [
        84
      ],
      "Loan": [
        719
      ],
      "Math": [
        792
      ],
      "SafeMath": [
        1104
      ]
    },
    "id": 85,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 793,
        "src": "25:53:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nikitaterekhov/Projects/LiquidityProtocol/contracts/Loan.sol",
        "file": "./Loan.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 85,
        "sourceUnit": 720,
        "src": "80:20:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          719
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 84,
        "linearizedBaseContracts": [
          84
        ],
        "name": "DynamicCollateralLending",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6,
            "libraryName": {
              "id": 4,
              "name": "Math",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 792,
              "src": "149:4:0"
            },
            "nodeType": "UsingForDirective",
            "src": "143:20:0",
            "typeName": {
              "id": 5,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "158:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "DynamicCollateralLending.User",
            "id": 13,
            "members": [
              {
                "constant": false,
                "id": 8,
                "mutability": "mutable",
                "name": "fraudStatus",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "191:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 7,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "191:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 10,
                "mutability": "mutable",
                "name": "activeLoan",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "217:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 9,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "217:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "mutability": "mutable",
                "name": "activeSupply",
                "nodeType": "VariableDeclaration",
                "scope": 13,
                "src": "245:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 11,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "245:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "User",
            "nodeType": "StructDefinition",
            "scope": 84,
            "src": "169:103:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a87430ba",
            "id": 18,
            "mutability": "mutable",
            "name": "users",
            "nodeType": "VariableDeclaration",
            "scope": 84,
            "src": "320:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
              "typeString": "mapping(address => struct DynamicCollateralLending.User)"
            },
            "typeName": {
              "id": 17,
              "keyType": {
                "id": 14,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "320:24:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
                "typeString": "mapping(address => struct DynamicCollateralLending.User)"
              },
              "valueType": {
                "id": 16,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15,
                  "name": "User",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 13,
                  "src": "339:4:0"
                },
                "referencedDeclaration": 13,
                "src": "339:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_User_$13_storage_ptr",
                  "typeString": "struct DynamicCollateralLending.User"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 82,
              "nodeType": "Block",
              "src": "498:398:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 32,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "552:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
                                "typeString": "mapping(address => struct DynamicCollateralLending.User storage ref)"
                              }
                            },
                            "id": 35,
                            "indexExpression": {
                              "expression": {
                                "id": 33,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "558:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 34,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "558:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "552:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$13_storage",
                              "typeString": "struct DynamicCollateralLending.User storage ref"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fraudStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8,
                          "src": "552:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "585:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "552:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "544:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "544:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "544:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 51,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 42,
                              "name": "users",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "664:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
                                "typeString": "mapping(address => struct DynamicCollateralLending.User storage ref)"
                              }
                            },
                            "id": 45,
                            "indexExpression": {
                              "expression": {
                                "id": 43,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "670:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "670:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "664:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_User_$13_storage",
                              "typeString": "struct DynamicCollateralLending.User storage ref"
                            }
                          },
                          "id": 46,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "activeLoan",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10,
                          "src": "664:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "704:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 48,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "696:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "696:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "696:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "664:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "657:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 52,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "657:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53,
                  "nodeType": "ExpressionStatement",
                  "src": "657:50:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "mutability": "mutable",
                      "name": "loan",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "718:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Loan_$719",
                        "typeString": "contract Loan"
                      },
                      "typeName": {
                        "id": 55,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 54,
                          "name": "Loan",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 719,
                          "src": "718:4:0"
                        },
                        "referencedDeclaration": 719,
                        "src": "718:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Loan_$719",
                          "typeString": "contract Loan"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 65,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 60,
                        "name": "_requestedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "739:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61,
                        "name": "_repaymentsCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22,
                        "src": "757:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 62,
                        "name": "_interest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "775:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 63,
                        "name": "_loanDescription",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 26,
                        "src": "786:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "730:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_bytes32_$returns$_t_contract$_Loan_$719_$",
                        "typeString": "function (uint256,uint256,uint256,bytes32) returns (contract Loan)"
                      },
                      "typeName": {
                        "id": 58,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 57,
                          "name": "Loan",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 719,
                          "src": "734:4:0"
                        },
                        "referencedDeclaration": 719,
                        "src": "734:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Loan_$719",
                          "typeString": "contract Loan"
                        }
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Loan_$719",
                      "typeString": "contract Loan"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "718:85:0"
                },
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 66,
                          "name": "users",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "814:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$13_storage_$",
                            "typeString": "mapping(address => struct DynamicCollateralLending.User storage ref)"
                          }
                        },
                        "id": 69,
                        "indexExpression": {
                          "expression": {
                            "id": 67,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "820:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "820:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "814:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_User_$13_storage",
                          "typeString": "struct DynamicCollateralLending.User storage ref"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "activeLoan",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10,
                      "src": "814:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 73,
                          "name": "loan",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "853:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Loan_$719",
                            "typeString": "contract Loan"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Loan_$719",
                            "typeString": "contract Loan"
                          }
                        ],
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "845:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "845:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "845:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "814:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "814:44:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 79,
                        "name": "loan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "884:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Loan_$719",
                          "typeString": "contract Loan"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Loan_$719",
                          "typeString": "contract Loan"
                        }
                      ],
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "876:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "876:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "876:13:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 30,
                  "id": 81,
                  "nodeType": "Return",
                  "src": "869:20:0"
                }
              ]
            },
            "functionSelector": "8852648c",
            "id": 83,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "applyForLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "mutability": "mutable",
                  "name": "_requestedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "386:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "386:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_repaymentsCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "409:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_interest",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "432:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "432:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_loanDescription",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "448:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "385:88:0"
            },
            "returnParameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 29,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 83,
                  "src": "489:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 28,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "488:9:0"
            },
            "scope": 84,
            "src": "364:532:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 85,
        "src": "102:797:0"
      }
    ],
    "src": "0:900:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x71e9e63bAe7bFCD1608e427F2334874DBD9719Dc",
      "transactionHash": "0x5a4acefb8853ed72607961f703cdcd6489a21a056d554aea7e94f824100b7cf0"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-17T21:27:18.212Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}